
-- Q1
CREATE TABLE BANKDETAILS(
    ACCNO INT,
    NAME VARCHAR2(15),
    BALANCE INT,
    ADATE DATE
);

INSERT INTO BANKDETAILS VALUES( 1001, 'aby', 3005, '10-oct-15' );
INSERT INTO BANKDETAILS VALUES( 1002, 'alan', 4000, '05-may-95' );
INSERT INTO BANKDETAILS VALUES( 1003, 'amal', 5000, '16-mar-92' );
INSERT INTO BANKDETAILS VALUES( 1004, 'jeffin', 3500, '01-apr-50' );

SELECT * FROM BANKDETAILS;

CREATE TABLE BANKNEW(
    ACCNO INT,
    INTR INT
);

-- CURSOR DEFINITION

DECLARE
    CURSOR TEMP IS
    SELECT
        ACCNO,
        NAME,
        BALANCE,
        ADATE
    FROM
        BANKDETAILS;

    TEMPVAR TEMP %ROWTYPE;
    INTR INT;
BEGIN
    OPEN TEMP;
    LOOP
        FETCH TEMP INTO TEMPVAR;
        INTR := .08 * TEMPVAR.BALANCE;
        INSERT INTO BANKNEW VALUES(
            TEMPVAR.ACCNO,
            INTR
        );
        EXIT WHEN TEMP%NOTFOUND;
    END LOOP;

    CLOSE TEMP;
END;
/

SELECT * FROM banknew;



-- Q2
CREATE TABLE STUDENTS (
    ID INT,
    NAME VARCHAR(30),
    M1 INT,
    M2 INT,
    M3 INT,
    GRADE VARCHAR(10)
);

INSERT INTO STUDENTS( ID, NAME, M1, M2, M3 ) VALUES( 1, 'allen', 40, 60, 50 );
INSERT INTO STUDENTS( ID, NAME, M1, M2, M3 ) VALUES( 2, 'adi', 47, 54, 34 );
INSERT INTO STUDENTS( ID, NAME, M1, M2, M3 ) VALUES( 3, 'binu', 70, 90, 80 );
INSERT INTO STUDENTS( ID, NAME, M1, M2, M3 ) VALUES( 4, 'ciju', 76, 32, 46 );
INSERT INTO STUDENTS( ID, NAME, M1, M2, M3 ) VALUES( 5, 'dinu', 49, 70, 67 );

select * from students;

 --cURSOR
DECLARE
    CURSOR TEMP1 IS
    SELECT ID, NAME, M1, M2, M3 FROM STUDENTS;
    T    TEMP1%ROWTYPE;
    TOT  INT;
    GRAD VARCHAR(10);
BEGIN
    OPEN TEMP1;
    LOOP
        FETCH TEMP1 INTO T;
        EXIT WHEN TEMP1%NOTFOUND;
        TOT := T.M1 + T.M2 + T.M3;
        IF (TOT / 3) > 80 THEN
            GRAD := 'A';
        ELSIF (TOT / 3) > 70 THEN
            GRAD := 'B';
        ELSIF (TOT / 3) > 60 THEN
            GRAD := 'C';
        ELSE
            GRAD := 'D';
        END IF;
        UPDATE STUDENTS SET GRADE = GRAD WHERE ID = T.ID;
    END LOOP;

    CLOSE TEMP1;
END;
/
select * from students;

-- Q3
CREATE TABLE PEOPLE_LIST(
    ID INT,
    NAME VARCHAR(30),
    DT_JOINING DATE,
    PLACE VARCHAR(30)
);

INSERT INTO PEOPLE_LIST VALUES( 100, 'allen', TO_DATE('10-04-2003', 'DD-MM-YYYY'), 'kerala' );
INSERT INTO PEOPLE_LIST VALUES( 102, 'adi', TO_DATE('11-11-2018', 'DD-MM-YYYY'), 'tamilnadu' );
INSERT INTO PEOPLE_LIST VALUES( 103, 'binu', TO_DATE('02-10-2017', 'DD-MM-YYYY'), 'japan' );
INSERT INTO PEOPLE_LIST VALUES( 104, 'ciju', TO_DATE('01-09-2001', 'DD-MM-YYYY'), 'america' );
INSERT INTO PEOPLE_LIST VALUES( 105, 'dinu', TO_DATE('06-07-2016', 'DD-MM-YYYY'), 'paris' );

SELECT * FROM PEOPLE_LIST;

CREATE TABLE EXP_LIST( ID INT, NAME VARCHAR(30), EX INT );

DECLARE
    CURSOR TEMP IS
    SELECT ID, NAME, DT_JOINING FROM PEOPLE_LIST;
    T  TEMP%ROWTYPE;
    EX INT;
BEGIN
    OPEN TEMP;
    LOOP
        FETCH TEMP INTO T;
        
        EX:=MONTHS_BETWEEN(SYSDATE, T.DT_JOINING)/12;
        IF EX>10 THEN
            INSERT INTO EXP_LIST VALUES( T.ID, T.NAME, EX );
        END IF;

        EXIT WHEN TEMP%NOTFOUND;
    END LOOP;
END;
/

SELECT * FROM EXP_LIST;

-- Q4
CREATE TABLE EMPLOYEE_LIST(
    ID INT,
    NAME VARCHAR(30),
    MONTHLY_SALARY INT
);

INSERT INTO EMPLOYEE_LIST VALUES( 1, 'allen', 3000);
INSERT INTO EMPLOYEE_LIST VALUES( 2, 'adi', 6000);
INSERT INTO EMPLOYEE_LIST VALUES( 3, 'binu', 20000);
INSERT INTO EMPLOYEE_LIST VALUES( 4, 'ciju', 50000);
INSERT INTO EMPLOYEE_LIST VALUES( 5, 'dinu', 35000);

SELECT * FROM EMPLOYEE_LIST;

DECLARE
    CURSOR TEMP IS
    SELECT ID, NAME, MONTHLY_SALARY FROM EMPLOYEE_LIST;

    T TEMP%ROWTYPE;
    A INT;
    M INT;
BEGIN
    OPEN TEMP;
    LOOP
        FETCH TEMP INTO T;
        A:=T.MONTHLY_SALARY*12;
        IF(A<60000)THEN
            M:=T.MONTHLY_SALARY+(T.MONTHLY_SALARY*0.25);
        ELSIF(A<200000)THEN
            M:=T.MONTHLY_SALARY+(T.MONTHLY_SALARY*0.20);
        ELSIF(A<500000)THEN
            M:=T.MONTHLY_SALARY+(T.MONTHLY_SALARY*0.15);
        ELSE
            M:=T.MONTHLY_SALARY+(T.MONTHLY_SALARY*0.10);
        END IF;
        UPDATE EMPLOYEE_LIST SET MONTHLY_SALARY=M WHERE ID=T.ID;
        EXIT WHEN TEMP%NOTFOUND;
    END LOOP;

    CLOSE TEMP;
END;
/

SELECT * FROM EMPLOYEE_LIST;